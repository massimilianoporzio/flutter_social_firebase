// Mocks generated by Mockito 5.4.2 from annotations
// in flutter_social_firebase/test/src/features/theme/domain/usecases/stream_theme_usecase_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:flutter_social_firebase/src/features/theme/domain/entities/custom_theme.dart'
    as _i4;
import 'package:flutter_social_firebase/src/features/theme/domain/repositories/theme_repository.dart'
    as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [ThemeRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockThemeRepository extends _i1.Mock implements _i2.ThemeRepository {
  @override
  _i3.Stream<_i4.CustomTheme> getTheme() => (super.noSuchMethod(
        Invocation.method(
          #getTheme,
          [],
        ),
        returnValue: _i3.Stream<_i4.CustomTheme>.empty(),
        returnValueForMissingStub: _i3.Stream<_i4.CustomTheme>.empty(),
      ) as _i3.Stream<_i4.CustomTheme>);
  @override
  _i3.Future<void> saveTheme(_i4.CustomTheme? theme) => (super.noSuchMethod(
        Invocation.method(
          #saveTheme,
          [theme],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);
  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );
}
